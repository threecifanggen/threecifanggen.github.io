{
	"version": 3,
	"file": "core.css",
	"sources": [
		"core.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami/_scut.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/scut/dist/_scut.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami/_reset.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami/_utility.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami/_typeface.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami/_layout.scss",
		"D:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/jekyll-theme-kagami-0.2.0/_sass/kagami/_typography.scss"
	],
	"sourcesContent": [
		"@import \"kagami\";\n",
		"@charset \"utf-8\";\n\n$font-size: 18px;\n\n// Dimensions\n$content-width: 680px;\n$spacing-unit: 32px;\n\n// Colors\n$content-color: #3c3c3c;\n$background-color: #fff;\n$border-color: #f0f0f0;\n$inline-code-color: #d32f2f;\n$inline-code-background: #fff6f6;\n$block-code-background: #f2f2fa;\n$mark-background: rgba(yellow, 0.35);\n\n@import \"kagami/scut\";\n@import \"kagami/reset\";\n@import \"kagami/utility\";\n@import \"kagami/typeface\";\n@import \"kagami/layout\";\n@import \"kagami/typography\";\n",
		"@import \"../scut/dist/scut\";\n",
		"/*\n* Scut, a collection of Sass utilities\n* to ease and improve our implementations of common style-code patterns.\n* v1.4.0\n* Docs at http://davidtheclark.github.io/scut\n*/\n\n@mixin scut-clearfix {\n\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n}\n\n%scut-clearfix {\n  @include scut-clearfix;\n}\n@mixin scut-list-unstyled(\n  $no-margin: true\n) {\n\n  list-style-type: none;\n  padding-left: 0;\n\n  @if $no-margin {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n}\n\n%scut-list-unstyled {\n  @include scut-list-unstyled();\n}\n// Depends on `list-unstyled` and `clearfix`.\n\n@mixin scut-list-floated (\n  $space: false,\n  $dir: left,\n  $no-margin: true\n) {\n\n  @include scut-list-unstyled($no-margin);\n  @include scut-clearfix;\n\n  & > li {\n    float: $dir;\n  }\n\n  @if $space {\n    & > li + li {\n      margin-#{$dir}: $space;\n    }\n  }\n\n}\n\n%scut-list-floated {\n  @include scut-list-floated;\n}\n\n@function scut-autoOrValue ($val) {\n  @if $val == a or $val == auto {\n    @return auto;\n  }\n  @else {\n    @return $val;\n  }\n}\n\n@mixin scut-coords (\n  $coordinates: n n n n\n) {\n\n  $top: nth($coordinates, 1);\n  $right: nth($coordinates, 2);\n  $bottom: nth($coordinates, 3);\n  $left: nth($coordinates, 4);\n\n  @if $top != n {\n    top: scut-autoOrValue($top);\n  }\n  @if $right != n {\n    right: scut-autoOrValue($right);\n  }\n  @if $bottom != n {\n    bottom: scut-autoOrValue($bottom);\n  }\n  @if $left != n {\n    left: scut-autoOrValue($left);\n  }\n\n}\n@function scut-strip-unit (\n  $num\n) {\n\n  @return $num / ($num * 0 + 1);\n\n}\n// Depends on `scut-strip-unit`.\n\n$scut-em-base: 16 !default;\n\n@function scut-em (\n  $pixels,\n  $base: $scut-em-base\n) {\n\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: scut-strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (scut-strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  }\n  @else {\n    @return $em-vals;\n  }\n\n}\n// Depends on `scut-strip-unit`.\n\n$scut-rem-base: 16 !default;\n\n@function scut-rem (\n  $pixels\n) {\n\n  $rem-vals: ();\n  @each $val in $pixels {\n    $val-in-rems: scut-strip-unit($val) / $scut-rem-base * 1rem;\n    $rem-vals: append($rem-vals, $val-in-rems);\n  }\n\n  @if length($rem-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($rem-vals, 1);\n  }\n  @else {\n    @return $rem-vals;\n  }\n\n}\n@mixin scut-border (\n  $style,\n  $sides: n y\n) {\n\n  @if length($sides) == 2 {\n    @if nth($sides, 1) != n {\n      border-top: $style;\n      border-bottom: $style;\n    }\n    @if nth($sides, 2) != n {\n      border-left: $style;\n      border-right: $style;\n    }\n  }\n\n  @else if length($sides) == 4 {\n    @if nth($sides, 1) != n {\n      border-top: $style;\n    }\n    @if nth($sides, 2) != n {\n      border-right: $style;\n    }\n    @if nth($sides, 3) != n {\n      border-bottom: $style;\n    }\n    @if nth($sides, 4) != n {\n      border-left: $style;\n    }\n  }\n\n  @else {\n    @warn \"Scut-border requires a $sides argument of 2 or 4 values.\"\n  }\n\n}\n@mixin scut-circle (\n  $size,\n  $color: inherit\n) {\n\n  border-radius: 50%;\n  display: inline-block;\n\n  @if $color == inherit {\n    // If user wants to inherit the color,\n    // take advantage of the fact that border\n    // color defaults to the text color of the element.\n    border-width: $size / 2;\n    border-style: solid;\n    height: 0;\n    width: 0;\n  }\n  @else {\n    // Otherwise, just use background-color.\n    background-color: $color;\n    height: $size;\n    width: $size;\n  }\n\n}\n@mixin scut-color-swap (\n  $off,\n  $on,\n  $duration: 0,\n  $bg: false\n) {\n\n  $transition-properties: null;\n  $off-is-list: type-of($off) == list;\n  $on-is-list: type-of($on) == list;\n\n  // If $off IS a list,\n  // assign color and background-color.\n  @if $off-is-list {\n    color: nth($off, 1);\n    background-color: nth($off, 2);\n    $transition-properties: background-color, color;\n  }\n\n  // If $off IS NOT a list and $bg is TRUE,\n  // assign background-color.\n  @else if $bg and not($off-is-list) {\n    background-color: $off;\n    $transition-properties: background-color;\n  }\n\n  // If $off IS NOT a list and $bg is FALSE,\n  // assign color.\n  @else {\n    color: $off;\n    $transition-properties: color;\n  }\n\n  // Only set-up transition if $duration != 0.\n  @if $duration != 0 {\n    transition-property: $transition-properties;\n    transition-duration: $duration;\n  }\n\n  &:hover,\n  &:focus {\n\n    // $on is treated the same as $off, above.\n    @if $on-is-list {\n      color: nth($on, 1);\n      background-color: nth($on, 2);\n    }\n\n    @else if $bg and not($on-is-list) {\n      background-color: $on;\n    }\n\n    @else {\n      color: $on;\n    }\n  }\n\n}\n@mixin scut-hd-bp (\n  $ratio: 1.3\n) {\n\n  @media (-o-min-device-pixel-ratio: ($ratio / 1)),\n         (-webkit-min-device-pixel-ratio: $ratio),\n         (min-resolution: (round(96 * $ratio) * 1dpi)) {\n    @content;\n  }\n\n}\n\n@mixin scut-hide-visually {\n\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n\n}\n\n%scut-hide-visually {\n  @include scut-hide-visually;\n}\n@mixin scut-image-replace {\n\n  text-indent: 102%;\n  white-space: nowrap;\n  overflow: hidden;\n  padding: 0;\n\n}\n\n%scut-image-replace {\n  @include scut-image-replace;\n}\n\n// Depends on scut-rem and scut-strip-unit\n\n@mixin scut-rem-fallback (\n  $pixels,\n  $property: font-size\n) {\n\n  $px-vals: null;\n  @each $val in $pixels {\n    $val-in-px: scut-strip-unit($val) * 1px;\n    $px-vals: append($px-vals, $val-in-px);\n  }\n  $rem-vals: scut-rem($pixels);\n\n  #{$property}: $px-vals;\n  #{$property}: $rem-vals;\n\n}\n@mixin scut-reset-border-box {\n  // Make everything a border-box, because why not?\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n}\n\n@mixin scut-reset-antialias {\n  // Antialias!\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n  *, *:before, *:after {\n    -webkit-font-smoothing: inherit;\n  }\n}\n\n@mixin scut-reset-semanticize {\n  // Make headers and <b> semantic, not presentational.\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n  b {\n    font-weight: normal;\n  }\n}\n\n@mixin scut-reset-pointer {\n  // Clickable form elements should have a pointer.\n  label,\n  select,\n  option,\n  button {\n    cursor: pointer;\n  }\n}\n\n@mixin scut-reset-form {\n  fieldset {\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n  textarea {\n    resize: vertical;\n  }\n}\n\n@mixin scut-reset-button {\n  // Reset default button styles, which are never used.\n  button,\n  [type=\"button\"],\n  [type=\"submit\"],\n  [type=\"reset\"] {\n    background: transparent;\n    border: 0;\n    color: inherit;\n    font: inherit;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    -webkit-appearance: none;\n    -webkit-font-smoothing: antialiased;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    &::-moz-focus-inner {\n      padding: 0;\n      border: 0;\n    }\n  }\n}\n\n@mixin scut-reset-paragraph {\n  // Some paragraph margins just get in the way.\n  p:first-of-type {\n    margin-top: 0;\n  }\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n}\n\n@mixin scut-reset-media {\n  // You want these elements fluid, probably.\n  img,\n  video {\n    max-width: 100%;\n    height: auto;\n  }\n}\n\n@mixin scut-reset-figure {\n  // Remove default margins.\n  figure {\n    margin: 0;\n  }\n}\n\n// Call them all, minus exclusions!\n@mixin scut-reset ($exclude: false) {\n  @if not(index($exclude, border-box)) {\n    @include scut-reset-border-box;\n  }\n  @if not(index($exclude, antialias)) {\n    @include scut-reset-antialias;\n  }\n  @if not(index($exclude, semanticize)) {\n    @include scut-reset-semanticize;\n  }\n  @if not(index($exclude, pointer)) {\n    @include scut-reset-pointer;\n  }\n  @if not(index($exclude, form)) {\n    @include scut-reset-form;\n  }\n  @if not(index($exclude, button)) {\n    @include scut-reset-button;\n  }\n  @if not(index($exclude, paragraph)) {\n    @include scut-reset-paragraph;\n  }\n  @if not(index($exclude, media)) {\n    @include scut-reset-media;\n  }\n  @if not(index($exclude, figure)) {\n    @include scut-reset-figure;\n  }\n}\n\n@mixin scut-selected (\n  $active: false\n) {\n\n  @if $active {\n    &:hover,\n    &:focus,\n    &:active {\n      @content;\n    }\n  }\n  @else {\n    &:hover,\n    &:focus {\n      @content;\n    }\n  }\n\n}\n@mixin scut-triangle (\n  $direction: right,\n  $size: 0.75em,\n  $color: inherit\n) {\n\n  display: inline-block;\n  height: 0;\n  width: 0;\n  // For improved appearance in some Webkit browsers\n  -webkit-transform: rotate(360deg);\n\n  // Set up some variables\n  $width: null;\n  $height: null;\n  $border-widths: null;\n\n  @if type-of($size) == list {\n    $width: nth($size, 1);\n    $height: nth($size, 2);\n  }\n  @else {\n    $width: $size;\n    $height: $size;\n  }\n\n  @if ($direction == up) or ($direction == down) {\n    // For up and down, width gets two borders but height only one,\n    // so divide second border-width value by 2\n    $border-widths: $height ($width / 2);\n  }\n  @else if ($direction == right) or ($direction == left) {\n    // For right and left, height gets two borders but width only one,\n    // so divide first border-width value by 2\n    $border-widths: ($height / 2) $width;\n  }\n  @else {\n    // For right triangles (the rest), both sides get two borders,\n    // so divide both by 2\n    $border-widths: ($height / 2) ($width / 2);\n  }\n\n  border-width: $border-widths;\n  border-style: solid;\n\n\n  // STANDARD TRIANGLES\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    border-color: transparent;\n    @if $direction == up {\n      border-bottom-color: $color;\n      border-top-width: 0;\n    }\n    @else if $direction == right {\n      border-left-color: $color;\n      border-right-width: 0;\n    }\n    @else if $direction == down {\n      border-top-color: $color;\n      border-bottom-width: 0;\n    }\n    @else if $direction == left {\n      border-right-color: $color;\n      border-left-width: 0;\n    }\n  }\n\n\n  // CORNER TRIANGLES\n\n  @else if ($direction == top-right) or ($direction == top-left) {\n    border-top-color: $color;\n    border-bottom-color: transparent;\n    @if $direction == top-right {\n      border-left-color: transparent;\n      border-right-color: $color;\n    }\n    @else if $direction == top-left {\n      border-left-color: $color;\n      border-right-color: transparent;\n    }\n  }\n\n  @else if ($direction == bottom-right) or ($direction == bottom-left) {\n    border-top-color: transparent;\n    border-bottom-color: $color;\n    @if $direction == bottom-right {\n      border-left-color: transparent;\n      border-right-color: $color;\n    }\n    @else if $direction == bottom-left {\n      border-left-color: $color;\n      border-right-color: transparent;\n    }\n  }\n\n}\n\n%scut-triangle {\n  @include scut-triangle;\n}\n@mixin scut-center-absolutely (\n  $dimensions\n) {\n\n  $width: nth($dimensions, 1);\n  $height: nth($dimensions, 2);\n\n  position: absolute;\n\n  @if $width != n {\n    width: $width;\n    left: 50%;\n    margin-left: (-$width / 2);\n  }\n\n  @if $height != n {\n    height: $height;\n    top: 50%;\n    margin-top: (-$height / 2);\n  }\n\n}\n@mixin scut-center-block (\n  $max-width: false\n) {\n\n  margin-left: auto;\n  margin-right: auto;\n  @if $max-width {\n    max-width: $max-width;\n  }\n\n}\n\n%scut-center-block {\n  @include scut-center-block;\n}\n\n@mixin scut-center-transform (\n  $axis: false // or x or y\n) {\n\n  position: absolute;\n\n  @if $axis != x {\n    top: 50%;\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  @if $axis != y {\n    left: 50%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  $translate-val: null;\n\n  @if not($axis) {\n    $translate-val: translate(-50%, -50%);\n  }\n  @else if $axis != x {\n    $translate-val: translateY(-50%);\n  }\n  @else if $axis != y {\n    $translate-val: translateX(-50%);\n  }\n\n  -webkit-transform: $translate-val;\n  -ms-transform: $translate-val;\n  transform: $translate-val;\n}\n\n%scut-center-transform {\n  @include scut-center-transform;\n}\n\n%scut-center-transform-x {\n  @include scut-center-transform(x);\n}\n\n%scut-center-transform-y {\n  @include scut-center-transform(y);\n}\n\n@mixin scut-fill (\n  $width-height: false\n) {\n\n  position: absolute;\n  left: 0;\n  top: 0;\n  @if $width-height {\n    width: 100%;\n    height: 100%;\n  }\n  @else {\n    right: 0;\n    bottom: 0;\n  }\n\n}\n\n%scut-fill {\n  @include scut-fill;\n}\n@mixin scut-list-custom (\n  $content: \"\\2022\",\n  $marker-width: 0.75em,\n  $pad: 0,\n  $no-margin: false\n) {\n\n  $content-val: null;\n  $counter: index($content, count);\n  @if $counter {\n    @if length($content) == 3 {\n      $content-val: counter(scutlistcounter, nth($content, 3))nth($content,2);\n    }\n    @else if length($content) == 2 {\n      $content-val: counter(scutlistcounter)nth($content,2);\n    }\n    @else {\n      $content-val: counter(scutlistcounter);\n    }\n  }\n  @else {\n    $content-val: $content;\n  }\n\n  padding-left: $marker-width + $pad;\n  list-style-type: none;\n\n  @if $no-margin {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  & > li {\n    position: relative;\n    @if $counter {\n      counter-increment: scutlistcounter;\n    }\n    &:before {\n      content: $content-val;\n      display: block;\n      position: absolute;\n      top: 0;\n      left: -$marker-width;\n      width: $marker-width;\n      @content;\n    }\n  }\n\n}\n// Depends on `list-floated`, which depends in turn on `list-unstyled` and `clearfix`.\n\n@mixin scut-list-divided (\n  $divider: \"|\",\n  $space: 0.5em,\n  $dir: left,\n  $height: false,\n  $no-margin: true\n) {\n\n  @include scut-list-floated($dir: $dir, $no-margin: $no-margin);\n\n  $pseudo: if($dir == left, 'before', 'after');\n\n  // If an explicit height is passed,\n  // things are different: All <li>s\n  // need the pseudo-element (to force height),\n  // but the first's must be hidden.\n\n  @if $height {\n    & > li {\n      height: $height;\n    }\n    & > li:#{$pseudo} {\n      height: $height;\n      content: $divider;\n      display: inline-block;\n      vertical-align: middle;\n      @content;\n    }\n    & > li:first-child:#{$pseudo} {\n      width: 0;\n      overflow: hidden;\n    }\n  }\n\n  & > li + li:#{$pseudo} {\n    @if not($height) {\n      content: $divider;\n      display: inline-block;\n      @content;\n    }\n    margin-left: $space;\n    margin-right: $space;\n  }\n\n}\n\n%scut-list-bar {\n  @include scut-list-divided;\n}\n\n%scut-list-breadcrumb {\n  @include scut-list-divided(\"/\");\n}\n// Depends on `list-unstyled`.\n\n@mixin scut-list-inline (\n  $space: false,\n  $no-margin: true\n) {\n\n  @include scut-list-unstyled($no-margin);\n\n  & > li {\n    display: inline-block;\n  }\n\n  @if $space {\n    & > li + li {\n      margin-left: $space;\n    }\n  }\n\n}\n\n%scut-list-inline {\n  @include scut-list-inline;\n}\n// Depends on `list-unstyled`.\n\n@mixin scut-list-punctuated (\n  $divider: \", \",\n  $display: inline,\n  $no-margin: true\n) {\n\n  @include scut-list-unstyled($no-margin);\n\n  & > li {\n    display: $display;\n    &:not(:last-child):after {\n      content: $divider;\n    }\n  }\n\n}\n\n%scut-list-comma {\n  @include scut-list-punctuated;\n}\n@mixin scut-margin (\n  $margin\n) {\n\n  @if length($margin) == 1 and $margin != n {\n    margin-top: $margin;\n    margin-right: $margin;\n    margin-bottom: $margin;\n    margin-left: $margin;\n  }\n\n  @if length($margin) == 2 {\n    $margin-y: nth($margin, 1);\n    $margin-x: nth($margin, 2);\n    @if $margin-y != n {\n      margin-top: $margin-y;\n      margin-bottom: $margin-y;\n    }\n    @if $margin-x != n {\n      margin-left: $margin-x;\n      margin-right: $margin-x;\n    }\n  }\n\n  @if length($margin) == 3 {\n    $margin-y-top: nth($margin, 1);\n    $margin-x: nth($margin, 2);\n    $margin-y-bottom: nth($margin, 3);\n    @if $margin-y-top != n {\n      margin-top: $margin-y-top;\n    }\n    @if $margin-x != n {\n      margin-right: $margin-x;\n      margin-left: $margin-x;\n    }\n    @if $margin-y-bottom != n {\n      margin-bottom: $margin-y-bottom;\n    }\n  }\n\n  @if length($margin) == 4 {\n    $margin-top: nth($margin, 1);\n    $margin-right: nth($margin, 2);\n    $margin-bottom: nth($margin, 3);\n    $margin-left: nth($margin, 4);\n    @if $margin-top != n {\n      margin-top: $margin-top;\n    }\n    @if $margin-right != n {\n      margin-right: $margin-right;\n    }\n    @if $margin-bottom != n {\n      margin-bottom: $margin-bottom;\n    }\n    @if $margin-left != n {\n      margin-left: $margin-left;\n    }\n  }\n\n}\n@mixin scut-padding (\n  $padding\n) {\n\n  @if length($padding) == 1 and $padding != n {\n    padding-top: $padding;\n    padding-right: $padding;\n    padding-bottom: $padding;\n    padding-left: $padding;\n  }\n\n  @if length($padding) == 2 {\n    $padding-y: nth($padding, 1);\n    $padding-x: nth($padding, 2);\n    @if $padding-y != n {\n      padding-top: $padding-y;\n      padding-bottom: $padding-y;\n    }\n    @if $padding-x != n {\n      padding-left: $padding-x;\n      padding-right: $padding-x;\n    }\n  }\n\n  @if length($padding) == 3 {\n    $padding-y-top: nth($padding, 1);\n    $padding-x: nth($padding, 2);\n    $padding-y-bottom: nth($padding, 3);\n    @if $padding-y-top != n {\n      padding-top: $padding-y-top;\n    }\n    @if $padding-x != n {\n      padding-right: $padding-x;\n      padding-left: $padding-x;\n    }\n    @if $padding-y-bottom != n {\n      padding-bottom: $padding-y-bottom;\n    }\n  }\n\n  @if length($padding) == 4 {\n    $padding-top: nth($padding, 1);\n    $padding-right: nth($padding, 2);\n    $padding-bottom: nth($padding, 3);\n    $padding-left: nth($padding, 4);\n    @if $padding-top != n {\n      padding-top: $padding-top;\n    }\n    @if $padding-right != n {\n      padding-right: $padding-right;\n    }\n    @if $padding-bottom != n {\n      padding-bottom: $padding-bottom;\n    }\n    @if $padding-left != n {\n      padding-left: $padding-left;\n    }\n  }\n}\n// Depends on `positioning-coordinates`.\n\n@mixin scut-absolute (\n  $coordinates: 0 n n 0\n) {\n\n  position: absolute;\n  @include scut-coords($coordinates);\n\n}\n\n%scut-absolute {\n  @include scut-absolute;\n}\n// Depends on `positioning-coordinates`.\n\n@mixin scut-fixed (\n  $coordinates: 0 n n 0\n) {\n\n  position: fixed;\n  @include scut-coords($coordinates);\n\n}\n\n%scut-fixed {\n  @include scut-fixed;\n}\n// Depends on `positioning-coordinates`.\n\n@mixin scut-relative (\n  $coordinates: n n n n\n) {\n\n  position: relative;\n  @include scut-coords($coordinates);\n\n}\n@mixin scut-ratio-box (\n  $ratio: 1/1\n) {\n\n  overflow: hidden;\n  position: relative;\n\n  // The container's height, as a percentage of the\n  // container's width, is set by assigning\n  // padding-top to a pseudo-element.\n  &:before {\n    content: \"\";\n    display: block;\n    height: 0;\n    padding-top: (1 / $ratio) * 100%;\n  }\n\n}\n\n%scut-ratio-box {\n  @include scut-ratio-box;\n}\n@mixin scut-size(\n  $size\n) {\n\n  @if length($size) == 1 {\n    width:  $size;\n    height: $size;\n  }\n  @else if length($size) == 2 {\n    width:  nth($size, 1);\n    height: nth($size, 2);\n  }\n\n}\n@mixin scut-sticky-footer-fixed (\n  $height,\n  $wrapper: \".wrapper\",\n  $footer: \".scut-sticky\"\n) {\n\n  html,\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  #{$wrapper} {\n    min-height: 100%;\n    margin-bottom: -$height;\n    &:after {\n      content: \"\";\n      display: block;\n    }\n  }\n\n  #{$wrapper}:after,\n  #{$footer} {\n    height: $height;\n  }\n\n}\n\n// deprecated\n@mixin scut-sticky-footer (\n  $height,\n  $wrapper: \".wrapper\",\n  $footer: \".scut-sticky\"\n){\n  @include scut-sticky-footer-fixed($height, $wrapper, $footer);\n}\n@mixin scut-sticky-footer-fluid (\n  $wrapper: \".wrapper\",\n  $footer: \".scut-sticky\"\n) {\n\n  html,\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  #{$wrapper} {\n    display: table;\n    height: 100%;\n    width: 100%;\n  }\n\n  #{$footer} {\n    display: table-row;\n    height: 1px;\n  }\n\n}\n@mixin scut-vcenter-ib (\n  $inner...\n) {\n\n  // The inner element is vertically centered\n  // by middle-aligning it with an inline pseudo-element\n  // whose height is 100%.\n\n  &:before {\n    content: \"\";\n    height: 100%;\n    display: inline-block;\n    vertical-align: middle;\n    // A small negative right margin is set\n    // to account for the default\n    // word-spacing of inline-block.\n    margin-right: -0.25em;\n  }\n\n  $inner: if(length($inner) == 0, \".scut-inner\", $inner);\n  @each $cell-selector in $inner {\n    $cell-selector: unquote($cell-selector);\n    & > #{$cell-selector} {\n      display: inline-block;\n      vertical-align: middle;\n    }\n  }\n\n}\n\n%scut-vcenter-ib {\n  @include scut-vcenter-ib;\n}\n\n@mixin scut-vcenter-lh (\n  $height\n) {\n\n  height: $height;\n  line-height: $height;\n\n}\n@mixin scut-vcenter-td (\n  $inner...\n) {\n\n  display: table;\n\n  $inner: if(length($inner) == 0, \".scut-inner\", $inner);\n  @each $cell-selector in $inner {\n    $cell-selector: unquote($cell-selector);\n    & > #{$cell-selector} {\n      display: table-cell;\n      vertical-align: middle;\n    }\n  }\n\n}\n\n\n%scut-vcenter-td {\n  @include scut-vcenter-td;\n}\n\n// Depends on scut-center-transform\n\n@mixin scut-vcenter-tt () {\n  @include scut-center-transform(y);\n}\n\n%scut-vcenter-tt {\n  @include scut-vcenter-tt;\n}\n// space\n$scut-space: \"\\0020\";\n// non-breaking space\n$scut-nbsp: \"\\00a0\";\n\n// quotation mark\n$scut-quot: \"\\0022\";\n// left single curly quote\n$scut-lsquo: \"\\2018\";\n// right single curly quote\n$scut-rsquo: \"\\2019\";\n// left double curly quote\n$scut-ldquo: \"\\201C\";\n// right double curly quote\n$scut-rdquo: \"\\201D\";\n// left single angle quote (guillemet)\n$scut-lsaquo: \"\\2039\";\n// right single angle quote (guillemet)\n$scut-rsaquo: \"\\203A\";\n// left double angle quote (guillemet)\n$scut-laquo: \"\\00ab\";\n// right double angle quote (guillemet)\n$scut-raquo: \"\\00bb\";\n\n// em dash (mutton)\n$scut-mdash: \"\\2014\";\n// en dash (nut)\n$scut-ndash: \"\\2013\";\n// hyphen\n$scut-hyphen: \"\\2010\";\n\n// ampersand\n$scut-amp: \"\\0026\";\n// greater than\n$scut-gt: \"\\003e\";\n// less than\n$scut-lt: \"\\003c\";\n// times\n$scut-times: \"\\00D7\";\n// big times\n$scut-bigtimes: \"\\2715\";\n// checkmark\n$scut-checkmark: \"\\2713\";\n\n// section sign (double S, hurricane, sectional symbol, the legal doughnut, signum sectionis)\n$scut-sect: \"\\00a7\";\n// paragraph symbol (pilcrow)\n$scut-para: \"\\00b6\";\n\n// middot (interpunct, interpoint)\n$scut-middot: \"\\00b7\";\n// o-slash (slashed o)\n$scut-oslash: \"\\00f8\";\n// bullet\n$scut-bull: \"\\2022\";\n// white bullet\n$scut-whibull: \"\\25E6\";\n// horizontal ellipsis\n$scut-hellip: \"\\2026\";\n// vertical ellipsis\n$scut-vellip: \"\\22EE\";\n// midline horizontal ellipsis\n$scut-midhellip: \"\\22EF\";\n\n// up-pointing triangle\n$scut-utri: \"\\25b2\";\n// down-pointing triangle\n$scut-dtri: \"\\25bc\";\n// left-pointing triangle\n$scut-ltri: \"\\25c0\";\n// right-pointing triangle\n$scut-rtri: \"\\25b6\";\n// up-pointing small triangle\n$scut-ustri: \"\\25b4\";\n// down-pointing small triangle\n$scut-dstri: \"\\25be\";\n// left-pointing small triangle\n$scut-lstri: \"\\25c2\";\n// right-pointing small triangle\n$scut-rstri: \"\\25b8\";\n// diamond\n$scut-diamond: \"\\25c6\";\n// fisheye\n$scut-fisheye: \"\\25c9\";\n// bullseye\n$scut-bullseye: \"\\25ce\";\n// circle\n$scut-circle: \"\\25cf\";\n// white circle\n$scut-whitecircle: \"\\25cb\";\n// square\n$scut-square: \"\\25a0\";\n// white square\n$scut-whitesquare: \"\\25a1\";\n// small square\n$scut-ssquare: \"\\25aa\";\n// small white square\n$scut-swhitesquare: \"\\25ab\";\n\n// general currency\n$scut-currency: \"\\00a4\";\n// cent\n$scut-cent: \"\\00a2\";\n// dollar\n$scut-dollar: \"\\0024\";\n// pound\n$scut-pound: \"\\00a3\";\n// euro\n$scut-euro: \"\\20ac\";\n// yen\n$scut-yen: \"\\00a5\";\n// rupee\n$scut-rupee: \"\\20B9\";\n@function main-src($formats, $file-path, $font-family) {\n  // Return the list of `src` values, in order, that\n  // a good `@font-face` will need, including only\n  // those formats specified in the list `$formats`.\n  $result: ();\n  @if index($formats, eot) {\n    $eot-val: url('#{$file-path}.eot?#iefix') format('embedded-opentype');\n    $result: append($result, $eot-val, comma);\n  }\n  @if index($formats, woff2) {\n    $woff2-val: url('#{$file-path}.woff2') format('woff2');\n    $result: append($result, $woff2-val, comma);\n  }\n  @if index($formats, woff) {\n    $woff-val: url('#{$file-path}.woff') format('woff');\n    $result: append($result, $woff-val, comma);\n  }\n  @if index($formats, ttf) {\n    $ttf-val: url('#{$file-path}.ttf') format('truetype');\n    $result: append($result, $ttf-val, comma);\n  }\n  @if index($formats, svg) {\n    $svg-val: url('#{$file-path}.svg##{$font-family}') format('svg');\n    $result: append($result, $svg-val, comma);\n  }\n  @return $result;\n}\n\n@mixin scut-font-face (\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $formats: eot woff2 woff ttf svg\n) {\n\n  @if index('italic' 'oblique', $weight) {\n    $style: $weight;\n    $weight: normal;\n  }\n\n  @font-face {\n    font-family: $font-family;\n    font-weight: $weight;\n    font-style: $style;\n\n    @if index($formats, eot) {\n      src: url('#{$file-path}.eot');\n    }\n    src: main-src($formats, $file-path, $font-family);\n  }\n\n}\n\n@mixin scut-hanging-indent (\n  $indent: 1em\n) {\n\n  // padding-left creates the indent,\n  // while text-indent pulls the first line\n  // back to the edge.\n\n  padding-left: $indent;\n  text-indent: -$indent;\n\n}\n\n%scut-hanging-indent {\n  @include scut-hanging-indent;\n}\n@mixin scut-indented-ps (\n  $indent: 1.5em,\n  $no-first-indent: true\n) {\n\n  p {\n    margin: 0;\n    text-indent: $indent;\n  }\n\n  @if $no-first-indent {\n    p:first-of-type {\n      text-indent: 0;\n    }\n  }\n\n}\n\n%scut-indented-ps {\n  @include scut-indented-ps;\n}\n@mixin scut-key-val (\n  $divider: \":\",\n  $pad: 0.25em,\n  $indent: 1em,\n  $spacing: 0,\n  $pad-left: 0\n) {\n\n  & > dt {\n    clear: both;\n    float: left;\n    &:after {\n      content: $divider;\n      margin-right: $pad;\n      @if $pad-left != 0 {\n        margin-left: $pad-left;\n      }\n    }\n  }\n\n  & > dd {\n    margin-left: $indent;\n    @if $spacing != 0 {\n      margin-bottom: $spacing;\n    }\n  }\n\n}\n\n%scut-key-val {\n  @include scut-key-val;\n}\n@mixin scut-link-bb (\n  $color: inherit,\n  $style: solid,\n  $width: 1px\n) {\n\n  text-decoration: none;\n\n  border-bottom-width: $width;\n  border-bottom-style: $style;\n  @if $color != inherit {\n    border-bottom-color: $color;\n  }\n\n}\n\n%scut-link-bb {\n  @include scut-link-bb;\n}\n// SCUT LINK UNSTYLED\n// http://davidtheclark.github.io/scut/#link-unstyled\n\n@mixin scut-link-unstyled() {\n\n  text-decoration: none;\n  color: inherit;\n\n}\n\n%scut-link-unstyled {\n  @include scut-link-unstyled();\n}\n\n@mixin scut-reverse-italics (\n  $elements: null\n) {\n\n  $element-list: em, cite, i;\n  font-style: italic;\n  #{join($element-list, $elements)} {\n    font-style: normal;\n  }\n\n}\n\n%scut-reverse-italics {\n  @include scut-reverse-italics;\n}\n\n@mixin scut-side-lined (\n  $height: 1px,\n  $space: 0.5em,\n  $color: inherit,\n  $style: solid,\n  $v-adjust: false,\n  $double: false\n) {\n\n  display: block;\n  overflow: hidden;\n  text-align: center;\n\n  &:before,\n  &:after {\n    content: \"\";\n    display: inline-block;\n    vertical-align: middle;\n    position: relative;\n    width: 50%;\n\n    border-top-style: $style;\n    border-top-width: $height;\n\n    @if $color != inherit {\n      border-top-color: $color;\n    }\n\n    @if $v-adjust != false {\n      bottom: $v-adjust;\n    }\n\n    @if $double != false {\n      height: $double;\n      border-bottom-style: $style;\n      border-bottom-width: $height;\n      @if $color != inherit {\n        border-bottom-color: $color;\n      }\n    }\n  }\n\n  &:before {\n    right: $space;\n    margin-left: -50%;\n  }\n  &:after {\n    left: $space;\n    margin-right: -50%;\n  }\n\n}\n\n%scut-side-lined {\n  @include scut-side-lined;\n}\n@mixin scut-truncate {\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n}\n\n%scut-truncate {\n  @include scut-truncate;\n}",
		"@include scut-reset(paragraph);\n* { margin: 0; padding: 0; }\n",
		"@mixin exdent-horizontally($size, $selector: \"*\") {\n  margin-left: -$size;\n  margin-right: -$size;\n  & > #{$selector} {\n    padding-left: $size;\n    padding-right: $size;\n  }\n}\n\n@mixin exdent-vertically($size, $selector: \"*\") {\n  margin-top: -$size;\n  margin-bottom: -$size;\n  & > #{$selector} {\n    padding-top: $size;\n    padding-bottom: $size;\n  }\n}\n\n",
		"@import url('https://fonts.googleapis.com/css?family=Crimson+Text:400,700|Press+Start+2P');\n\n@font-face {\n  font-family: \"Kagami SC\";\n  src: local(\"Songti SC Regular\"), local(STSongti-SC-Regular);\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"Kagami SC\";\n  src: local(\"Songti SC Bold\"), local(STSongti-SC-Bold);\n  font-weight: bold;\n  font-style: normal;\n}\n\n// @font-face {\n//   font-family: \"Kagami SC\";\n//   src: local(\"Kaiti SC Regular\"), local(STKaiti-SC-Regular);\n//   font-weight: normal;\n//   font-style: italic;\n// }\n\n// @font-face {\n//   font-family: \"Kagami SC\";\n//   src: local(\"Kaiti SC Bold\"), local(STKaiti-SC-Bold);\n//   font-weight: bold;\n//   font-style: italic;\n// }\n\n@font-face {\n  font-family: \"Kagami TC\";\n  src: local(\"Songti TC Regular\"), local(STSongti-TC-Regular);\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"Kagami TC\";\n  src: local(\"Songti TC Bold\"), local(STSongti-TC-Bold);\n  font-weight: bold;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"Kagami Emoji\";\n  src: local(\"Apple Color Emoji\"), // iOS & OS X 10.7\n       local(\"Segoe UI Emoji\"),    // Windows 8.1\n       local(\"Segoe UI Symbol\"),   // Windows 7\n       local(\"Noto Color Emoji\"),  // Android & Linux\n       local(\"Android Emoji\");     // Linux\n}\n\n@mixin font-sans {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Kagami Emoji\";\n}\n\n@mixin font-serif($font-family-fallback: serif) {\n  font-family: \"Crimson Text\", $font-family-fallback, \"Kagami Emoji\";\n}\n\n@mixin font-serif-zh-Hans($font-family-fallback: sans-serif) {\n  font-family: \"Crimson Text\", \"Kagami SC\", $font-family-fallback, \"Kagami Emoji\";\n}\n\n@mixin font-serif-zh-Hant($font-family-fallback: sans-serif) {\n  font-family: \"Crimson Text\", \"Kagami TC\", $font-family-fallback, \"Kagami Emoji\";\n}\n\n@mixin font-serif-ja($font-family-fallback: sans-serif) {\n  font-family: \"Crimson Text\", \"YuMincho\", $font-family-fallback, \"Kagami Emoji\";\n}\n\n@mixin font-monospace($font-family-fallback: monospace) {\n  font-family: Courier, Monaco, $font-family-fallback;\n}\n\n@function font-size($factor: 1.0) {\n  @return $font-size * $factor;\n}\n",
		"$content-padding: $spacing-unit / 2;\n$post-margin-width: 2 * $spacing-unit;\n$post-header-spacing: 3.5 * $spacing-unit;\n$post-footer-spacing: 3 * $spacing-unit;\n\nhtml {\n  height: 100%;\n  overflow-x: hidden;\n}\n\nbody {\n  min-height: 100%;\n  width: 100%;\n  overflow: hidden; // fixes margin-collapsing of body\n}\n\n.wrapper {\n  width: 100%;\n  max-width: $content-width;\n  margin: 0 auto;\n  padding-left: $content-padding;\n  padding-right: $content-padding;\n  @media screen and (min-width: $content-width) {\n    padding-left: $content-padding + $post-margin-width;\n    padding-right: $content-padding + $post-margin-width;\n  }\n}\n\narticle {\n\n  $vspacing: $spacing-unit;\n  $hspacing: $spacing-unit / 2;\n\n  h1, h2, h3, h4, h5, h6, p, ul, ol, pre, hr, blockquote, img:only-child {\n    display: block;\n    margin: $vspacing auto;\n  }\n\n  li > ul, li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .task-list-item {\n    list-style-type: none;\n  }\n\n  .task-list-item-checkbox {\n    margin: 0 .5em .3em -1.6em;\n    vertical-align: middle;\n  }\n\n  pre {\n    position: relative;\n    overflow: hidden;\n\n    code {\n      display: block;\n      overflow-x: auto;\n    }\n\n    @include exdent-horizontally($hspacing, \"code\");\n    @include exdent-vertically(0.5 * $vspacing, \"code\");\n\n    @media screen and (min-width: $content-width) {\n      @include exdent-horizontally(2 * $hspacing, \"code\");\n    }\n  }\n\n  blockquote {\n    margin-left: 0.5 * $spacing-unit;\n    margin-right: 0.5 * $spacing-unit;\n    @media screen and (min-width: $content-width) {\n      margin-left: $spacing-unit;\n      margin-right: $spacing-unit;\n    }\n    cite {\n      display: block;\n      text-align: right;\n      margin-top: -$spacing-unit;\n      white-space: nowrap;\n    }\n  }\n\n  .aside, .sidenote, .side-note {\n    width: 160px;\n    float: left;\n    margin-left: -$post-margin-width;\n    margin-right: $vspacing;\n    padding: 0;\n  }\n\n  @media screen and (max-width: $content-width) {\n    h2, h3, h4, h5, h6 {\n      &::before { color: rgba(0,0,0,0); }\n    }\n    .aside, .sidenote, .side-note {\n      display: none;\n    }\n  }\n\n  @media screen and (min-width: $content-width) {\n    .hero-unit {\n      margin-left: -$post-margin-width;\n      margin-right: -$post-margin-width;\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 { // reduce spacing after headings\n    & + *,\n    & + .aside + *,\n    & + .sidenote + * { margin-top: -0.5 * $hspacing; }\n  }\n\n}\n\n.post-header {\n  margin-top: $post-header-spacing;\n  margin-bottom: $post-header-spacing;\n}\n\n.post-cover {\n  margin-top: -$post-header-spacing + $spacing-unit;\n}\n\n.post-footer, #disqus_thread {\n  margin-top: $post-footer-spacing;\n  margin-bottom: $post-footer-spacing;\n}\n\n.site-nav {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: top;\n  justify-content: center;\n  margin-left: -$post-margin-width;\n  margin-right: -$post-margin-width;\n}\n\n@media screen and (min-width: $content-width) {\n  .site-nav {\n    height: 0;\n    justify-content: flex-end;\n  }\n}\n\n.page-link {\n  display: block;\n  padding: 0.5em;\n}\n\n.site-footer {\n  padding-top: $spacing-unit;\n  padding-bottom: $spacing-unit;\n}\n\n.site-footer .wrapper {\n  display: flex;\n  width: 100%;\n  flex-flow: row-reverse wrap;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.social-links {\n  text-align: center;\n  margin: 1em (-$content-padding);\n  padding: 0 0.3em;\n  white-space: nowrap;\n}\n\n.credits {\n  margin-left: -0.256em;\n  white-space: nowrap;\n}\n\n.post-list-item {\n  position: relative;\n  margin-top: $spacing-unit;\n  margin-bottom: $spacing-unit;\n}\n\n.post-item-cover {\n  width: 100vw;\n  position: absolute;\n  top: -.5 * $spacing-unit;\n  bottom: -.5 * $spacing-unit;\n  margin-left: 50%;\n  transform: translateX(-50%);\n  background-size: cover;\n  background-position: center;\n}\n\n.post-item-label {\n  position: relative;\n}\n\n.post-description {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.cover-meta {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 4px 8px;\n  p { margin: 0; padding: 0; }\n}\n",
		"[lang^=\"en\"]      { line-height: 1.6; @include font-serif; }\n[lang^=\"zh-Hans\"] { line-height: 1.8; @include font-serif-zh-Hans; }\n[lang^=\"zh-Hant\"] { line-height: 1.8; @include font-serif-zh-Hant; }\n[lang^=\"ja\"]      { line-height: 1.8; @include font-serif-ja; }\n\nbody {\n  color: $content-color;\n  font-size: font-size();\n  font-weight: 300;\n  font-kerning: normal;\n  border-top: 2px solid currentColor;\n}\n\na, a:hover, a:visited {\n  @include scut-link-unstyled;\n}\n\nimg { max-width: 100%; }\n\nh1, h2, h3, h4, h5, h6, p {\n  display: block;\n}\n\nh1 { font-size: 1.8em; }\nh2 { font-weight: bold; font-size: 1.4em; }\nh3 { font-weight: bold; font-size: 1.2em; }\nh4 { font-weight: bold; }\nh5 { font-weight: bold; }\n\narticle {\n\n  h2, h3, h4, h5, h6 {\n    &::before {\n      content: \"#\";\n      display: inline-block;\n      text-align: right;\n      width: font-size(5);\n      margin-left: font-size(-5.5);\n      margin-right: font-size(0.5);\n      opacity: 0.08;\n    }\n  }\n\n  h3::before { content: \"##\"; }\n  h4::before { content: \"###\"; }\n  h5::before { content: \"####\"; }\n  h6::before { content: \"#####\"; }\n\n  p {\n    hanging-punctuation: allow-end; // no browser supports this rule\n  }\n\n  .aside, .sidenote, .side-note {\n    font-size: .72em;\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  strong {\n    font-weight: bold;\n  }\n\n  a, a:hover, a:visited {\n    border-bottom: 1px dotted currentColor;\n  }\n\n  img.half-size, img.retina2x {\n    // Supported by JavaScript\n  }\n\n  ul,\n  ol { padding-left: 2.0em; }\n  ul { list-style-type: disc; }\n  ul ul { list-style-type: circle; }\n  ul ul ul { list-style-type: square;  }\n  ol { list-style-type: decimal; }\n\n  blockquote {\n    font-style: italic;\n  }\n\n  code {\n    display: inline-block;\n    padding: 0 0.3em;\n    margin: 0 -0.05em;\n    font-size: 0.875em;\n    @include font-monospace;\n    color: $inline-code-color;\n    background: $inline-code-background;\n    border-radius: 3px;\n  }\n\n  pre {\n    color: lighten($content-color, 20%);\n    background: $block-code-background;\n    code {\n      color: inherit;\n      background: none;\n      line-height: 1.6;\n    }\n  }\n\n  mark {\n    color: inherit;\n    background: $mark-background;\n  }\n\n  hr {\n    border: none;\n    border-bottom: 1px solid $border-color;\n    width: 30%;\n  }\n}\n\n.site-title, .site-title:hover, .site-title:visited {\n  display: inline-block;\n  font-variant-caps: all-petite-caps;\n  font-size: 0.875em;\n  @include font-serif;\n  border-bottom: none;\n  white-space: nowrap;\n}\n\n.site-nav {\n  font-size: 0.875em;\n  font-variant-caps: all-petite-caps;\n  letter-spacing: 0.12em;\n}\n\n.page-link {\n  transition: color 0.2s ease-in;\n}\n\n.site-nav:hover {\n  color: lighten($content-color, 50%);\n  .page-link:hover {\n    color: $content-color;\n  }\n}\n\n.post-title {\n  word-break: keep-all;\n  margin-top: -0.5 * $font-size;\n}\n\n.post-cover {\n  position: relative;\n  width: 100vw;\n  max-height: 40vh;\n  margin-left: 50%;\n  transform: translateX(-50%);\n  overflow-y: hidden;\n\n  .post-cover-wrapper {\n    max-height: inherit;\n    position: relative;\n    transform: translateY(50%);\n  }\n\n  img {\n    width: 100%;\n    margin: 0 !important;\n    transform: translateY(-50%);\n  }\n}\n\n.post-footer {\n  color: lighten($content-color, 50%);\n  font-size: 0.875em;\n  @include scut-clearfix;\n\n  .post-meta { float: left; }\n  .post-tags { float: right; }\n\n  .post-tags {\n    &::before { content: 'Tags: ' }\n    @include scut-list-punctuated(\" / \");\n    .tag-link {\n      transition: color 0.2s ease-out;\n      &:hover { color: lighten($content-color, 20%); }\n    }\n  }\n}\n\n.social-link {\n  $size: 2em;\n  display: inline-block;\n  width: $size;\n  height: $size;\n  line-height: $size;\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.social-link:hover {\n  transform: translateY(-0.25em);\n  &.social-github { color: #333; }\n  &.social-twitter { color: #1da1f2; }\n  &.social-instagram { color: #e1306c; }\n  &.social-rss { color: #f26522; }\n}\n\n.credits {\n  color: lighten($content-color, 50%);\n  font-size: 0.68em;\n}\n\n.post-list {\n  @include scut-list-unstyled;\n}\n\n.post-item-link {\n  font-size: 1.4em;\n}\n\n.post-description {\n  font-size: 0.875em;\n}\n\n.post-item-meta {\n  font-variant-caps: all-petite-caps;\n  color: lighten($content-color, 40%);\n}\n\n.post-list-item .post-item-cover {\n  opacity: 0.03;\n  transition: opacity 0.5s ease-out;\n}\n\n.post-list-item:hover .post-item-cover {\n  opacity: 0.15;\n  transition: opacity 0.5s ease-out;\n}\n\n.cover-meta {\n  font-family: \"Press Start 2P\", cursive;\n  font-variant-caps: all-petite-caps;\n  font-size: 0.4em;\n  color: #fff;\n}\n\n.site-title, .site-title:visited, .site-title:hover {\n  margin-left: 3px;\n}\n\n[lang^=\"zh\"] {\n  .post-item-link {\n    margin-left: -2px;\n  }\n  h1 { margin-left: -1px; }\n  h2 { margin-left: -2px; }\n  h3 { margin-left: -2px; }\n}\n\n.baseline-fix {\n  visibility: hidden;\n}\n\n.baseline-fix-block {\n  display: inline-block;\n  vertical-align: top;\n  font-size: 0.95em;\n}\n"
	],
	"names": [],
	"mappings": "AGAA,oKAKE;AGLF,OAAO,CAAC,kFAAI;AHkVV,AAAA,IAAI,CAAC,EACH,UAAU,EAAE,UAAU,GACvB;;AACD,AAAA,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,EACnB,UAAU,EAAE,OAAO,GACpB;;AAKD,AAAA,IAAI,CAAC,EACH,sBAAsB,EAAE,WAAW,GACpC;;AACD,AAAA,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,EACnB,sBAAsB,EAAE,OAAO,GAChC;;AAKD,AAAA,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,CAAC,EACD,SAAS,EAAE,GAAG,EACd,WAAW,EAAE,MAAM,EACnB,MAAM,EAAE,CAAC,GACV;;AACD,AAAA,CAAC,CAAC,EACA,WAAW,EAAE,MAAM,GACpB;;AAKD,AAAA,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,CAAC,EACL,MAAM,EAAE,OAAO,GAChB;;AAID,AAAA,QAAQ,CAAC,EACP,MAAM,EAAE,CAAC,EACT,MAAM,EAAE,CAAC,EACT,OAAO,EAAE,CAAC,GACX;;AACD,AAAA,QAAQ,CAAC,EACP,MAAM,EAAE,QAAQ,GACjB;;AAKD,AAAA,MAAM,GACN,AAAA,IAAC,CAAK,QAAQ,AAAb,IACD,AAAA,IAAC,CAAK,QAAQ,AAAb,IACD,AAAA,IAAC,CAAK,OAAO,AAAZ,EAAc,EACb,UAAU,EAAE,WAAW,EACvB,MAAM,EAAE,CAAC,EACT,KAAK,EAAE,OAAO,EACd,IAAI,EAAE,OAAO,EACb,MAAM,EAAE,CAAC,EACT,OAAO,EAAE,CAAC,EACV,KAAK,EAAE,IAAI,EACX,kBAAkB,EAAE,IAAI,EACxB,sBAAsB,EAAE,WAAW,EACnC,mBAAmB,EAAE,IAAI,EACzB,gBAAgB,EAAE,IAAI,EACtB,eAAe,EAAE,IAAI,EACrB,WAAW,EAAE,IAAI,GAKlB;;AArBD,AAiBE,MAjBI,EAiBD,gBAAgB,GAhBrB,AAAA,IAAC,CAAK,QAAQ,AAAb,GAgBI,gBAAgB,GAfrB,AAAA,IAAC,CAAK,QAAQ,AAAb,GAeI,gBAAgB,GAdrB,AAAA,IAAC,CAAK,OAAO,AAAZ,GAcI,gBAAgB,CAAC,EAClB,OAAO,EAAE,CAAC,EACV,MAAM,EAAE,CAAC,GACV;;AAgBH,AAAA,GAAG,EACH,KAAK,CAAC,EACJ,SAAS,EAAE,IAAI,EACf,MAAM,EAAE,IAAI,GACb;;AAKD,AAAA,MAAM,CAAC,EACL,MAAM,EAAE,CAAC,GACV;;AC1bH,AAAA,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,GAAI;;AEC7B,UAAU,GACR,WAAW,EAAE,WAAW,EACxB,GAAG,EAAE,0BAA0B,EAAE,0BAA0B,EAC3D,WAAW,EAAE,MAAM,EACnB,UAAU,EAAE,MAAM;;AAGpB,UAAU,GACR,WAAW,EAAE,WAAW,EACxB,GAAG,EAAE,uBAAuB,EAAE,uBAAuB,EACrD,WAAW,EAAE,IAAI,EACjB,UAAU,EAAE,MAAM;;AAiBpB,UAAU,GACR,WAAW,EAAE,WAAW,EACxB,GAAG,EAAE,0BAA0B,EAAE,0BAA0B,EAC3D,WAAW,EAAE,MAAM,EACnB,UAAU,EAAE,MAAM;;AAGpB,UAAU,GACR,WAAW,EAAE,WAAW,EACxB,GAAG,EAAE,uBAAuB,EAAE,uBAAuB,EACrD,WAAW,EAAE,IAAI,EACjB,UAAU,EAAE,MAAM;;AAGpB,UAAU,GACR,WAAW,EAAE,cAAc,EAC3B,GAAG,EAAE,0BAA0B,EAC1B,uBAAuB,EACvB,wBAAwB,EACxB,yBAAyB,EACzB,sBAAsB;;AC7C7B,AAAA,IAAI,CAAC,EACH,MAAM,EAAE,IAAI,EACZ,UAAU,EAAE,MAAM,GACnB;;AAED,AAAA,IAAI,CAAC,EACH,UAAU,EAAE,IAAI,EAChB,KAAK,EAAE,IAAI,EACX,QAAQ,EAAE,MAAM,GACjB;;AAED,AAAA,QAAQ,CAAC,EACP,KAAK,EAAE,IAAI,EACX,SAAS,ENbK,KAAK,EMcnB,MAAM,EAAE,MAAM,EACd,YAAY,EApBI,IAAiB,EAqBjC,aAAa,EArBG,IAAiB,GA0BlC;;AAJC,MAAM,8BANR,GAAA,AAAA,QAAQ,CAAC,EAOL,YAAY,EAAE,IAAqC,EACnD,aAAa,EAAE,IAAqC,GAEvD,EAAA;;AAED,AAKE,OALK,CAKL,EAAE,EALJ,OAAO,CAKD,EAAE,EALR,OAAO,CAKG,EAAE,EALZ,OAAO,CAKO,EAAE,EALhB,OAAO,CAKW,EAAE,EALpB,OAAO,CAKe,EAAE,EALxB,OAAO,CAKmB,CAAC,EAL3B,OAAO,CAKsB,EAAE,EAL/B,OAAO,CAK0B,EAAE,EALnC,OAAO,CAK8B,GAAG,EALxC,OAAO,CAKmC,EAAE,EAL5C,OAAO,CAKuC,UAAU,EALxD,OAAO,CAKmD,GAAG,CAAC,UAAU,CAAC,EACrE,OAAO,EAAE,KAAK,EACd,MAAM,EN7BK,IAAI,CM6BG,IAAI,GACvB;;AARH,AAUE,OAVK,CAUL,EAAE,GAAG,EAAE,EAVT,OAAO,CAUI,EAAE,GAAG,EAAE,CAAC,EACf,UAAU,EAAE,CAAC,EACb,aAAa,EAAE,CAAC,GACjB;;AAbH,AAeE,OAfK,CAeL,eAAe,CAAC,EACd,eAAe,EAAE,IAAI,GACtB;;AAjBH,AAmBE,OAnBK,CAmBL,wBAAwB,CAAC,EACvB,MAAM,EAAE,kBAAkB,EAC1B,cAAc,EAAE,MAAM,GACvB;;AAtBH,AAwBE,OAxBK,CAwBL,GAAG,CAAC,EACF,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,MAAM,EFrDlB,WAAW,EE8BA,KAAiB,EF7B5B,YAAY,EE6BD,KAAiB,EFrB5B,UAAU,EEoDmB,KAAe,EFnD5C,aAAa,EEmDgB,KAAe,GAK3C;;AAvCH,AA4BI,OA5BG,CAwBL,GAAG,CAID,IAAI,CAAC,EACH,OAAO,EAAE,KAAK,EACd,UAAU,EAAE,IAAI,GACjB;;AA/BL,AFzBE,OEyBK,CAwBL,GAAG,GFpDD,IAAI,CAGK,EACT,YAAY,EE2BH,IAAiB,EF1B1B,aAAa,EE0BJ,IAAiB,GFzB3B;;AEsBH,AFhBE,OEgBK,CAwBL,GAAG,GFpDD,IAAI,CAYK,EACT,WAAW,EEiDgB,IAAe,EFhD1C,cAAc,EEgDa,IAAe,GF/C3C;;AEiDC,MAAM,8BAZR,GAxBF,AAwBE,OAxBK,CAwBL,GAAG,CAAC,EFnDJ,WAAW,EEgEsB,KAAa,EF/D9C,YAAY,EE+DqB,KAAa,GAE7C,CAvCH,AFzBE,OEyBK,CAwBL,GAAG,GFpDD,IAAI,CAGK,EACT,YAAY,EE6DmB,IAAa,EF5D5C,aAAa,EE4DkB,IAAa,GF3D7C,EE6DA;;AAvCH,AAyCE,OAzCK,CAyCL,UAAU,CAAC,EACT,WAAW,EAAE,IAAmB,EAChC,YAAY,EAAE,IAAmB,GAWlC;;AAVC,MAAM,8BAHR,GAzCF,AAyCE,OAzCK,CAyCL,UAAU,CAAC,EAIP,WAAW,ENnEF,IAAI,EMoEb,YAAY,ENpEH,IAAI,GM4EhB,EAAA;;AAtDH,AAgDI,OAhDG,CAyCL,UAAU,CAOR,IAAI,CAAC,EACH,OAAO,EAAE,KAAK,EACd,UAAU,EAAE,KAAK,EACjB,UAAU,ENzED,KAAI,EM0Eb,WAAW,EAAE,MAAM,GACpB;;AArDL,AAwDE,OAxDK,CAwDL,MAAM,EAxDR,OAAO,CAwDG,SAAS,EAxDnB,OAAO,CAwDc,UAAU,CAAC,EAC5B,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,IAAI,EACX,WAAW,EAtFK,KAAiB,EAuFjC,YAAY,ENlFD,IAAI,EMmFf,OAAO,EAAE,CAAC,GACX;;AAED,MAAM,8BAEF,GAlEN,AAkEM,OAlEC,CAiEH,EAAE,EACG,MAAM,EAlEf,OAAO,CAiEC,EAAE,EACD,MAAM,EAlEf,OAAO,CAiEK,EAAE,EACL,MAAM,EAlEf,OAAO,CAiES,EAAE,EACT,MAAM,EAlEf,OAAO,CAiEa,EAAE,EACb,MAAM,CAAC,EAAE,KAAK,EAAE,gBAAa,GAAI,CAlE1C,AAoEI,OApEG,CAoEH,MAAM,EApEV,OAAO,CAoEK,SAAS,EApErB,OAAO,CAoEgB,UAAU,CAAC,EAC5B,OAAO,EAAE,IAAI,GACd,EAJoC;;AAOvC,MAAM,8BACJ,GA1EJ,AA0EI,OA1EG,CA0EH,UAAU,CAAC,EACT,WAAW,EAtGG,KAAiB,EAuG/B,YAAY,EAvGE,KAAiB,GAwGhC,EAAA;;AA7EL,AAiFI,OAjFG,CAgFL,EAAE,GACI,CAAC,EAjFT,OAAO,CAgFL,EAAE,GAEI,MAAM,GAAG,CAAC,EAlFlB,OAAO,CAgFL,EAAE,GAGI,SAAS,GAAG,CAAC,EAnFrB,OAAO,CAgFD,EAAE,GACA,CAAC,EAjFT,OAAO,CAgFD,EAAE,GAEA,MAAM,GAAG,CAAC,EAlFlB,OAAO,CAgFD,EAAE,GAGA,SAAS,GAAG,CAAC,EAnFrB,OAAO,CAgFG,EAAE,GACJ,CAAC,EAjFT,OAAO,CAgFG,EAAE,GAEJ,MAAM,GAAG,CAAC,EAlFlB,OAAO,CAgFG,EAAE,GAGJ,SAAS,GAAG,CAAC,EAnFrB,OAAO,CAgFO,EAAE,GACR,CAAC,EAjFT,OAAO,CAgFO,EAAE,GAER,MAAM,GAAG,CAAC,EAlFlB,OAAO,CAgFO,EAAE,GAGR,SAAS,GAAG,CAAC,EAnFrB,OAAO,CAgFW,EAAE,GACZ,CAAC,EAjFT,OAAO,CAgFW,EAAE,GAEZ,MAAM,GAAG,CAAC,EAlFlB,OAAO,CAgFW,EAAE,GAGZ,SAAS,GAAG,CAAC,EAnFrB,OAAO,CAgFe,EAAE,GAChB,CAAC,EAjFT,OAAO,CAgFe,EAAE,GAEhB,MAAM,GAAG,CAAC,EAlFlB,OAAO,CAgFe,EAAE,GAGhB,SAAS,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,IAAgB,GAAI;;AAKxD,AAAA,YAAY,CAAC,EACX,UAAU,EAnHU,KAAmB,EAoHvC,aAAa,EApHO,KAAmB,GAqHxC;;AAED,AAAA,WAAW,CAAC,EACV,UAAU,EAAE,KAAqC,GAClD;;AAED,AAAA,YAAY,EAAE,cAAc,CAAC,EAC3B,UAAU,EA3HU,IAAiB,EA4HrC,aAAa,EA5HO,IAAiB,GA6HtC;;AAED,AAAA,SAAS,CAAC,EACR,OAAO,EAAE,IAAI,EACb,SAAS,EAAE,QAAQ,EACnB,WAAW,EAAE,GAAG,EAChB,eAAe,EAAE,MAAM,EACvB,WAAW,EAtIO,KAAiB,EAuInC,YAAY,EAvIM,KAAiB,GAwIpC;;AAED,MAAM,8BACJ,GAAA,AAAA,SAAS,CAAC,EACR,MAAM,EAAE,CAAC,EACT,eAAe,EAAE,QAAQ,GAC1B,EAAA;;AAGH,AAAA,UAAU,CAAC,EACT,OAAO,EAAE,KAAK,EACd,OAAO,EAAE,KAAK,GACf;;AAED,AAAA,YAAY,CAAC,EACX,WAAW,ENlJE,IAAI,EMmJjB,cAAc,ENnJD,IAAI,GMoJlB;;AAED,AAAA,YAAY,CAAC,QAAQ,CAAC,EACpB,OAAO,EAAE,IAAI,EACb,KAAK,EAAE,IAAI,EACX,SAAS,EAAE,gBAAgB,EAC3B,eAAe,EAAE,aAAa,EAC9B,WAAW,EAAE,MAAM,GACpB;;AAED,AAAA,aAAa,CAAC,EACZ,UAAU,EAAE,MAAM,EAClB,MAAM,EAAE,GAAG,CAtKK,KAAiB,EAuKjC,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,MAAM,GACpB;;AAED,AAAA,QAAQ,CAAC,EACP,WAAW,EAAE,QAAQ,EACrB,WAAW,EAAE,MAAM,GACpB;;AAED,AAAA,eAAe,CAAC,EACd,QAAQ,EAAE,QAAQ,EAClB,UAAU,EN5KG,IAAI,EM6KjB,aAAa,EN7KA,IAAI,GM8KlB;;AAED,AAAA,gBAAgB,CAAC,EACf,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,GAAG,EAAE,KAAmB,EACxB,MAAM,EAAE,KAAmB,EAC3B,WAAW,EAAE,GAAG,EAChB,SAAS,EAAE,gBAAgB,EAC3B,eAAe,EAAE,KAAK,EACtB,mBAAmB,EAAE,MAAM,GAC5B;;AAED,AAAA,gBAAgB,CAAC,EACf,QAAQ,EAAE,QAAQ,GACnB;;AAED,AAAA,iBAAiB,CAAC,EAChB,UAAU,EAAE,IAAI,EAChB,aAAa,EAAE,IAAI,GACpB;;AAED,AAAA,WAAW,CAAC,EACV,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,CAAC,EACT,KAAK,EAAE,CAAC,EACR,MAAM,EAAE,OAAO,GAEhB;;AAND,AAKE,WALS,CAKT,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,GAAI;;CC/M/B,AAAA,AAAA,IAAC,EAAM,IAAI,AAAV,EAAiB,EAAE,WAAW,EAAE,GAAG,EF0DlC,WAAW,EAAE,cAAc,EADY,KAAK,EACQ,cAAc,GE1DP;;CAC7D,AAAA,AAAA,IAAC,EAAM,SAAS,AAAf,EAAiB,EAAE,WAAW,EAAE,GAAG,EF6DlC,WAAW,EAAE,cAAc,EAAE,WAAW,EADO,UAAU,EACQ,cAAc,GE7DZ;;CACrE,AAAA,AAAA,IAAC,EAAM,SAAS,AAAf,EAAiB,EAAE,WAAW,EAAE,GAAG,EFgElC,WAAW,EAAE,cAAc,EAAE,WAAW,EADO,UAAU,EACQ,cAAc,GEhEZ;;CACrE,AAAA,AAAA,IAAC,EAAM,IAAI,AAAV,EAAiB,EAAE,WAAW,EAAE,GAAG,EFmElC,WAAW,EAAE,cAAc,EAAE,UAAU,EADG,UAAU,EACY,cAAc,GEnEhB;;AAEhE,AAAA,IAAI,CAAC,EACH,KAAK,EPGS,OAAO,EOFrB,SAAS,EFuED,IAAoB,EEtE5B,WAAW,EAAE,GAAG,EAChB,YAAY,EAAE,MAAM,EACpB,UAAU,EAAE,sBAAsB,GACnC;;AAED,AAAA,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,ELm5CpB,eAAe,EAAE,IAAI,EACrB,KAAK,EAAE,OAAO,GKl5Cf;;AAED,AAAA,GAAG,CAAC,EAAE,SAAS,EAAE,IAAI,GAAI;;AAEzB,AAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EACxB,OAAO,EAAE,KAAK,GACf;;AAED,AAAA,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,GAAI;;AACzB,AAAA,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,GAAI;;AAC5C,AAAA,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,GAAI;;AAC5C,AAAA,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,GAAI;;AAC1B,AAAA,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,GAAI;;AAE1B,AAGI,OAHG,CAEL,EAAE,EACG,MAAM,EAHb,OAAO,CAED,EAAE,EACD,MAAM,EAHb,OAAO,CAEG,EAAE,EACL,MAAM,EAHb,OAAO,CAEO,EAAE,EACT,MAAM,EAHb,OAAO,CAEW,EAAE,EACb,MAAM,CAAC,EACR,OAAO,EAAE,GAAG,EACZ,OAAO,EAAE,YAAY,EACrB,UAAU,EAAE,KAAK,EACjB,KAAK,EF0CD,IAAoB,EEzCxB,WAAW,EFyCP,KAAoB,EExCxB,YAAY,EFwCR,GAAoB,EEvCxB,OAAO,EAAE,IAAI,GACd;;AAXL,AAcE,OAdK,CAcL,EAAE,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,GAAI;;AAdhC,AAeE,OAfK,CAeL,EAAE,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,KAAK,GAAI;;AAfjC,AAgBE,OAhBK,CAgBL,EAAE,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,MAAM,GAAI;;AAhBlC,AAiBE,OAjBK,CAiBL,EAAE,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,GAAI;;AAjBnC,AAmBE,OAnBK,CAmBL,CAAC,CAAC,EACA,mBAAmB,EAAE,SAAS,GAC/B;;AArBH,AAuBE,OAvBK,CAuBL,MAAM,EAvBR,OAAO,CAuBG,SAAS,EAvBnB,OAAO,CAuBc,UAAU,CAAC,EAC5B,SAAS,EAAE,KAAK,GACjB;;AAzBH,AA2BE,OA3BK,CA2BL,EAAE,CAAC,EACD,UAAU,EAAE,MAAM,GACnB;;AA7BH,AA+BE,OA/BK,CA+BL,MAAM,CAAC,EACL,WAAW,EAAE,IAAI,GAClB;;AAjCH,AAmCE,OAnCK,CAmCL,CAAC,EAnCH,OAAO,CAmCF,CAAC,CAAC,KAAK,EAnCZ,OAAO,CAmCO,CAAC,CAAC,OAAO,CAAC,EACpB,aAAa,EAAE,uBAAuB,GACvC;;AArCH,AA2CE,OA3CK,CA2CL,EAAE,EA3CJ,OAAO,CA4CL,EAAE,CAAC,EAAE,YAAY,EAAE,KAAK,GAAI;;AA5C9B,AA6CE,OA7CK,CA6CL,EAAE,CAAC,EAAE,eAAe,EAAE,IAAI,GAAI;;AA7ChC,AA8CE,OA9CK,CA8CL,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,GAAI;;AA9CrC,AA+CE,OA/CK,CA+CL,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,GAAK;;AA/CzC,AAgDE,OAhDK,CAgDL,EAAE,CAAC,EAAE,eAAe,EAAE,OAAO,GAAI;;AAhDnC,AAkDE,OAlDK,CAkDL,UAAU,CAAC,EACT,UAAU,EAAE,MAAM,GACnB;;AApDH,AAsDE,OAtDK,CAsDL,IAAI,CAAC,EACH,OAAO,EAAE,YAAY,EACrB,OAAO,EAAE,OAAO,EAChB,MAAM,EAAE,SAAS,EACjB,SAAS,EAAE,OAAO,EFbpB,WAAW,EAAE,OAAO,EAAE,MAAM,EADe,SAAS,EEgBlD,KAAK,EP7EW,OAAO,EO8EvB,UAAU,EP7EW,OAAO,EO8E5B,aAAa,EAAE,GAAG,GACnB;;AA/DH,AAiEE,OAjEK,CAiEL,GAAG,CAAC,EACF,KAAK,EPtFO,OAAO,EOuFnB,UAAU,EPlFU,OAAO,GOwF5B;;AAzEH,AAoEI,OApEG,CAiEL,GAAG,CAGD,IAAI,CAAC,EACH,KAAK,EAAE,OAAO,EACd,UAAU,EAAE,IAAI,EAChB,WAAW,EAAE,GAAG,GACjB;;AAxEL,AA2EE,OA3EK,CA2EL,IAAI,CAAC,EACH,KAAK,EAAE,OAAO,EACd,UAAU,EP3FS,uBAAM,GO4F1B;;AA9EH,AAgFE,OAhFK,CAgFL,EAAE,CAAC,EACD,MAAM,EAAE,IAAI,EACZ,aAAa,EAAE,GAAG,CAAC,KAAK,CPpGb,OAAO,EOqGlB,KAAK,EAAE,GAAG,GACX;;AAGH,AAAA,WAAW,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,OAAO,CAAC,EAClD,OAAO,EAAE,YAAY,EACrB,iBAAiB,EAAE,eAAe,EAClC,SAAS,EAAE,OAAO,EF7DlB,WAAW,EAAE,cAAc,EADY,KAAK,EACQ,cAAc,EE+DlE,aAAa,EAAE,IAAI,EACnB,WAAW,EAAE,MAAM,GACpB;;AAED,AAAA,SAAS,CAAC,EACR,SAAS,EAAE,OAAO,EAClB,iBAAiB,EAAE,eAAe,EAClC,cAAc,EAAE,MAAM,GACvB;;AAED,AAAA,UAAU,CAAC,EACT,UAAU,EAAE,kBAAkB,GAC/B;;AAED,AAAA,SAAS,CAAC,KAAK,CAAC,EACd,KAAK,EP/HS,OAAO,GOmItB;;AALD,AAEE,SAFO,CAAC,KAAK,CAEb,UAAU,CAAC,KAAK,CAAC,EACf,KAAK,EPjIO,OAAO,GOkIpB;;AAGH,AAAA,WAAW,CAAC,EACV,UAAU,EAAE,QAAQ,EACpB,UAAU,EAAE,IAAiB,GAC9B;;AAED,AAAA,WAAW,CAAC,EACV,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,IAAI,EAChB,WAAW,EAAE,GAAG,EAChB,SAAS,EAAE,gBAAgB,EAC3B,UAAU,EAAE,MAAM,GAanB;;AAnBD,AAQE,WARS,CAQT,mBAAmB,CAAC,EAClB,UAAU,EAAE,OAAO,EACnB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,eAAe,GAC3B;;AAZH,AAcE,WAdS,CAcT,GAAG,CAAC,EACF,KAAK,EAAE,IAAI,EACX,MAAM,EAAE,YAAY,EACpB,SAAS,EAAE,gBAAgB,GAC5B;;AAGH,AAAA,YAAY,CAAC,EACX,KAAK,EPhKS,OAAO,EOiKrB,SAAS,EAAE,OAAO,GAcnB;;AAhBD,AL/JE,YK+JU,CL/JR,KAAK,CAAC,EACN,OAAO,EAAE,EAAE,EACX,OAAO,EAAE,KAAK,EACd,KAAK,EAAE,IAAI,GACZ;;AK2JH,AAKE,YALU,CAKV,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,GAAI;;AAL9B,AAME,YANU,CAMV,UAAU,CAAC,EAAE,KAAK,EAAE,KAAK,GAAI;;AAN/B,AAQE,YARU,CAQV,UAAU,CAAC,ELxJX,eAAe,EAAE,IAAI,EACrB,YAAY,EAAE,CAAC,EAGb,UAAU,EAAE,CAAC,EACb,aAAa,EAAE,CAAC,GK0JjB;;AAfH,AASI,YATQ,CAQV,UAAU,EACL,MAAM,CAAC,EAAE,OAAO,EAAE,QAAS,GAAE;;AATpC,ALkqBE,YKlqBU,CAQV,UAAU,GL0pBN,EAAE,CAAC,EACL,OAAO,EAPC,MAAM,GAWf;;AKvqBH,ALoqBI,YKpqBQ,CAQV,UAAU,GL0pBN,EAAE,CAEH,GAAK,EAAC,UAAU,EAAE,KAAK,CAAC,EACvB,OAAO,EK3pBqB,KAAK,GL4pBlC;;AKtqBL,AAWI,YAXQ,CAQV,UAAU,CAGR,SAAS,CAAC,EACR,UAAU,EAAE,mBAAmB,GAEhC;;AAdL,AAaM,YAbM,CAQV,UAAU,CAGR,SAAS,CAEL,KAAK,CAAC,EAAE,KAAK,EP5KL,OAAO,GO4KgC;;AAKvD,AAAA,YAAY,CAAC,EAEX,OAAO,EAAE,YAAY,EACrB,KAAK,EAFE,GAAG,EAGV,MAAM,EAHC,GAAG,EAIV,WAAW,EAJJ,GAAG,EAKV,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,uCAAuC,GAC7D;;AAED,AAAA,YAAY,CAAC,KAAK,CAAC,EACjB,SAAS,EAAE,mBAAmB,GAK/B;;AAND,AAEE,YAFU,AAET,cAAc,CAFJ,KAAK,CAEA,EAAE,KAAK,EAAE,IAAI,GAAI;;AAFnC,AAGE,YAHU,AAGT,eAAe,CAHL,KAAK,CAGC,EAAE,KAAK,EAAE,OAAO,GAAI;;AAHvC,AAIE,YAJU,AAIT,iBAAiB,CAJP,KAAK,CAIG,EAAE,KAAK,EAAE,OAAO,GAAI;;AAJzC,AAKE,YALU,AAKT,WAAW,CALD,KAAK,CAKH,EAAE,KAAK,EAAE,OAAO,GAAI;;AAGnC,AAAA,QAAQ,CAAC,EACP,KAAK,EPnMS,OAAO,EOoMrB,SAAS,EAAE,MAAM,GAClB;;AAED,AAAA,UAAU,CAAC,ELxLT,eAAe,EAAE,IAAI,EACrB,YAAY,EAAE,CAAC,EAGb,UAAU,EAAE,CAAC,EACb,aAAa,EAAE,CAAC,GKqLnB;;AAED,AAAA,eAAe,CAAC,EACd,SAAS,EAAE,KAAK,GACjB;;AAED,AAAA,iBAAiB,CAAC,EAChB,SAAS,EAAE,OAAO,GACnB;;AAED,AAAA,eAAe,CAAC,EACd,iBAAiB,EAAE,eAAe,EAClC,KAAK,EPrNS,OAAO,GOsNtB;;AAED,AAAA,eAAe,CAAC,gBAAgB,CAAC,EAC/B,OAAO,EAAE,IAAI,EACb,UAAU,EAAE,qBAAqB,GAClC;;AAED,AAAA,eAAe,CAAC,KAAK,CAAC,gBAAgB,CAAC,EACrC,OAAO,EAAE,IAAI,EACb,UAAU,EAAE,qBAAqB,GAClC;;AAED,AAAA,WAAW,CAAC,EACV,WAAW,EAAE,yBAAyB,EACtC,iBAAiB,EAAE,eAAe,EAClC,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,IAAI,GACZ;;AAED,AAAA,WAAW,EAAE,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAClD,WAAW,EAAE,GAAG,GACjB;;CAED,AAAA,AACE,IADD,EAAM,IAAI,AAAV,EACC,eAAe,CAAC,EACd,WAAW,EAAE,IAAI,GAClB;;CAHH,AAAA,AAIE,IAJD,EAAM,IAAI,AAAV,EAIC,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,GAAI;;CAJ5B,AAAA,AAKE,IALD,EAAM,IAAI,AAAV,EAKC,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,GAAI;;CAL5B,AAAA,AAME,IAND,EAAM,IAAI,AAAV,EAMC,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,GAAI;;AAG5B,AAAA,aAAa,CAAC,EACZ,UAAU,EAAE,MAAM,GACnB;;AAED,AAAA,mBAAmB,CAAC,EAClB,OAAO,EAAE,YAAY,EACrB,cAAc,EAAE,GAAG,EACnB,SAAS,EAAE,MAAM,GAClB"
}